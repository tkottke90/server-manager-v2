version: '3'

services:
  # nginx:
  #   image: nginx:1.17-alpine
  #   container_name: nginx
  #   restart: always
  #   volumes:
  #     - ./configs/nginx:/etc/nginx/conf.d
  #     - ./configs/certbot/conf:/etc/letencrypt
  #     - ./configs/certbot/www:/var/www/certbot
  #   ports:
  #     - "80:80"
  #     - "443:443"

  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   volumes:
  #     - ./configs/certbot/conf:/etc/letsencrypt
  #     - ./configs/certbot/www:/var/www/certbot
  #     - ./logs/letsencrypt:/var/log/letsencrypt

  manager-proxy:
    image: tkottke/server-manager-proxy:latest
    container_name: server_manager_proxy
    env_file: 
      - ./configs/server-manager-proxy/env.list
    volumes:
      - ./logs/proxy/:/usr/app/logs
    restart: always
    ports:
      - "3000:3000"

  manager-api:
    image: tkottke/server-manager-api:latest
    depends_on:
      - manager-db
    container_name: server_manager_api
    env_file: 
      - ./configs/server-manager-api/env.list
    volumes:
      - ./logs/api/:/usr/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  manager-db:
    container_name: server_manager_db
    image: postgres:11-alpine
    restart: always
    env_file:
      - ./configs/server-manager-db/env.list
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data/

  # manager-ui:
  #   image: tkottke/server-manager-ui:latest
  #   container_name: server_manager_ui
  #   env_file: 
  #     - ./configs/server-manager-ui/env.list
  #   restart: always